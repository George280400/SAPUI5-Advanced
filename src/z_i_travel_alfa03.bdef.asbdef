managed;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for z_i_travel_alfa03 alias Travel
implementation in class zbp_i_travel_alfa03 unique
persistent table ztravel_alfa03
with additional save
lock master
authorization master ( instance )
etag master last_changed_at
{
// administrative fields : read only
  field (readonly)last_changed_at, last_changed_by, created_by, created_at;
  // Mandatory fields that are required to create a travel
  field (mandatory : create) agency_id, overall_status, booking_fee, currency_code;

  //dynamic field control

  field (features : instance)travel_id, overall_status;

  create;
  update;
  delete;

  // validations
  validation validateCustomer on save { create;field customer_id;}
  validation validateDates on save { create;field begin_date, end_date;}
  validation validateStatus on save {create;field overall_status;}

  //actions
  action (features : instance) acceptTravel result[1] $self;
  action (features : instance) rejectTravel result[1] $self;

  action createTravelByTemplate result[1] $self;

  association _Booking { create; }

  mapping for ztravel_alfa03 corresponding;
}

define behavior for z_i_booking_alfa03 alias Booking
implementation in class zbp_i_booking_alfa03 unique
persistent table zbooking_alfa03
lock dependent by _Travel
authorization dependent by _Travel
etag master last_change_at
{

  // Mandatory fields that are required to create a travel
  field (mandatory : create) carrier_id, connection_id, flight_date, booking_status;


  update;
  delete;

    // validations
  validation validateStatus on save {field booking_status;}


  field ( readonly ) travel_id;
  association _Travel;
  association _BookingSupplement { create; }

  //determinations
  determination calculateTotalFlightPrice on modify {field flight_price, currency_code;}

  mapping for zbooking_alfa03 corresponding;
}

define behavior for z_i_booksupp_alfa03 alias Supplement
implementation in class zbp_i_booksupp_alfa03 unique
with unmanaged save
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{

  field (mandatory : create) supplement_id, price;

  update;
  delete;
  field ( readonly ) travel_id, booking_id;
  association _Travel;
  association _Booking;

    //determinations
  determination calculateTotalSupplPrice on modify {field price, currency;}

  mapping for zlog_alfa03 corresponding;
}